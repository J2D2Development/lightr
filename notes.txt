LIGHTR PROJECT: 
    https://www.developers.meethue.com/documentation
    http://www.material-ui.com/#/

    prevent screen sleep:
        https://davidwalsh.name/wake-lock-shim

    next:
        -main dashboard grid (for now: lights: status of each, link to manage, lists: 'coming soon')
            -in main 'cardmedia' element, create chart of useage, # and type of lists, etc?
        -manage for each ind light should have brightness and name change functionality
            -currently working but could be better.  LightSwitchIndividualView.js file- find better styling for normal title vs input field edit (more consistent).  Possible to add animation (horizontal transition) on change?
        set node env variable for hue api username?
            -won't work until we have a prod server?
        -set up light groups area of app  
            -create/manage groups.
                -continue with manage: link up chips to add/remove to/from groups
                    -works- see if you can change the 'delete icon' on chip to make + icon?
                -create 'add new group' icon in main 'manage' view
        -find host and link up (probably firebase hosting to enable google login eventually)
            -be sure to npm run build for prod build and push that to firebase hosting
            -find domain name!
            -TODO: major issue, can't access local network (http) from outside (https).  Possible solution: run entire damn thing off simple express server on 192 address and connect there from ip4.  test that- if it works, use it until I can figure out the remote - local communication
                -option 1: host on DO, config my own Node server.  Serve over http, should be no problem
                -option 2: keep on Google, create firebase db schema that matches Hue lights api.  Sync react state to that db.  have dashboard.js functions communicate with Hue api on state change?  Or have google cloud function listen to db updates and fire local function (might not be possible)
            -won't need auth for now: lights only work if you're on the same network
        -implement fetch and promises polyfill (ip4 only has ios/safari V7- no native fetch or promises)
            https://github.com/github/fetch
            https://github.com/taylorhakes/promise-polyfill
                -both installed, working?  not yet sure.
            -check on react- will it work in a version of safari that old?  a2 doesn't seem to :<(
                -if all else fails, buy super cheap android phone and put chrome on it.  That will eliminate this issue and eliminate the need for polyfills above!
        -test on laptop from outside home network (should fail to load lights info).  add nice 'no access' msg, but allow access to other areas if logged in.
            -successfully fails (ha!).  Makes sense- it's requesting access to a local network address (192) that doesn't exist.  just need to add a check for that and notice on failure.
        -loading animation  
            -small and large (for individual cards and overall)
        -'welcome' screen graphics (create something cool in canvas?)

    when done post launch:
        create new branch for refactoring
            -a lot of repeated methods on Dashboard.js for lights vs groups- find a way to share!
            -destructure LightSwitchIndividualView and groupswitchindividualview- large components that could be broken down

    make sure updates are pushed live (if update from app, we want the webapp to update live, as the old iphone4 will serve as the on-site switch for the closet)

    test app: react native

for tplink smart plug:
    http://itnerd.space/2017/06/19/how-to-authenticate-to-tp-link-cloud-api/
    https://github.com/plasticrake/hs100-api
    http://itnerd.space/2017/05/21/how-to-get-the-tp-link-hs100-cloud-end-point-url/

    api?: https://wap.tplinkcloud.com




LEARNING PROJECTS
https://github.com/kwhinnery/node-workshop/tree/master/challenge1
https://www.interviewcake.com/question/javascript/product-of-other-numbers

http://www.codewars.com/kata/langtons-ant?utm_source=newsletter
http://www.codewars.com/kata/geometry-basics-triangle-area-in-2d/train/javascript
http://www.codewars.com/kata/longest-common-subsequence?utm_source=newsletter
https://martinfowler.com/articles/refactoring-video-store-js/


WORK ON THIS
https://performancejs.com/post/hde6d32/The-Best-List-of-Frontend-JavaScript-Interview-Questions-(written-by-a-Frontend-Engineer)

D3
-update enter-exit pattern (very useful)
    https://bl.ocks.org/cmgiven/32d4c53f19aea6e528faf10bfe4f3da9

DATA STRUCTURES
quicksort, binary sort
stacks, linked list, queues, default array methods

https://www.codementor.io/thinker3197/avoid-common-pitfalls-in-javascript-u0hzz2nfw

https://www.codementor.io/nihantanu/21-essential-javascript-tech-interview-practice-questions-answers-du107p62z?utm_source=youtube&utm_medium=social&utm_campaign=outreach&utm_term=post-du107p62z&utm_content=OH119-comment